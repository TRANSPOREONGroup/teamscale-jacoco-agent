plugins {
	id 'java-library'
	id 'maven'
}

version pluginVersion

repositories {
	mavenCentral()
}

dependencies {
	implementation project(':teamscale-client')
	implementation project(':report-generator')
	
	implementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.2.0'
	implementation group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.2.0'
	implementation group: 'org.junit.platform', name: 'junit-platform-engine', version: '1.2.0'
	implementation group: 'org.junit.platform', name: 'junit-platform-console', version: '1.2.0'
	testRuntime 'org.junit.vintage:junit-vintage-engine:4.12.3'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
	sourceCompatibility = "1.8"
	targetCompatibility = "1.8"
}

// At the moment we are stuck with the old maven plugin until support for private key
// files is added or we add a dedicated user with a password to our server.
// https://github.com/gradle/gradle/issues/1263
uploadArchives {
	repositories {
		mavenDeployer {
			configuration = configurations.deployerJars
			repository(url: cqseMavenRepositoryUrl) {
				authentication(userName: cqseMavenRepositoryUser, privateKey: cqseMavenRepositoryPrivateKey)
			}
		}
	}
}
