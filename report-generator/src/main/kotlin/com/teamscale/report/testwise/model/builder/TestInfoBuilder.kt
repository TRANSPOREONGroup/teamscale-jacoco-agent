package com.teamscale.report.testwise.model.builder

import com.teamscale.client.TestDetails
import com.teamscale.report.testwise.model.TestExecution
import com.teamscale.report.testwise.model.TestInfo

/** Generic container of all information about a specific test including details, execution info and coverage.  */
class TestInfoBuilder
/** Constructor.  */
/* package */ internal constructor(
    /** The uniformPath of the test (see TEST_IMPACT_ANALYSIS_DOC.md for more information).  */
    /** @see .uniformPath
     */
    val uniformPath: String
) {

    /** The test details of this test.  */
    private var details: TestDetails? = null

    /** Information about the execution result of this test.  */
    private var execution: TestExecution? = null

    /** Coverage generated by this test.  */
    private var coverage: TestCoverageBuilder? = null

    /** Returns true if there is no coverage for the test yet.  */
    val isEmpty: Boolean
        get() = coverage!!.isEmpty

    /** @see .details
     */
    fun setDetails(details: TestDetails) {
        this.details = details
    }

    /** @see .execution
     */
    fun setExecution(execution: TestExecution) {
        this.execution = execution
    }

    /** @see .coverage
     */
    fun setCoverage(coverage: TestCoverageBuilder) {
        this.coverage = coverage
    }

    /** Builds a [TestInfo] object of the data in this container.  */
    fun build(): TestInfo {
        val testInfo = when (execution) {
            null -> TestInfo(uniformPath, details!!.sourcePath, details!!.content, null, null, null)
            else -> {
                TestInfo(
                    uniformPath, details!!.sourcePath, details!!.content,
                    execution!!.durationSeconds,
                    execution!!.result, execution!!.message
                )
            }
        }
        if (coverage != null) {
            testInfo.paths.addAll(coverage!!.paths)
        }
        return testInfo
    }
}
